import{j as e}from"./jsx-runtime-Cwi7KSeA.js";import{u as i}from"./index-BtdslvUy.js";import{M as n,C as s}from"./index-BwNQZ7yn.js";import{S as l,B as h,D as c,W as o,a as x,V as j,P as a,R as u,b as p,M as m}from"./fb-slider.stories-K3FepUCz.js";import"./iframe-C6g2oLdd.js";import"../sb-preview/runtime.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DXimoRZY.js";import"./index-Dv1YWgiV.js";import"./index-DrFu-skq.js";import"./vue.esm-bundler-DEpQrfwO.js";import"./web-ui-components.es-nLJZCm2K.js";import"./web-ui-constants.es-Bfh99ZXh.js";function t(r){const d={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...i(),...r.components};return e.jsxs(e.Fragment,{children:[e.jsx(n,{of:l}),`
`,e.jsx(d.h1,{id:"slider",children:"Slider"}),`
`,e.jsx(d.p,{children:"You can drag the slider within a fixed range."}),`
`,e.jsx(d.h2,{id:"basic-usage",children:"Basic Usage"}),`
`,e.jsx(d.p,{children:"The current value is displayed while dragging the slider. You can customize the initial value of the slider by setting the binding value."}),`
`,e.jsx(s,{withToolbar:!0,of:h}),`
`,e.jsx(d.h2,{id:"discrete-values",children:"Discrete Values"}),`
`,e.jsx(d.p,{children:"The options can be discrete."}),`
`,e.jsxs(d.p,{children:["Define the step size using the ",e.jsx(d.code,{children:"step"})," property. You can choose to display breakpoints by setting the ",e.jsx(d.code,{children:"show-stops"})," property."]}),`
`,e.jsx(s,{withToolbar:!0,of:c}),`
`,e.jsx(d.h2,{id:"with-input-box",children:"With Input Box"}),`
`,e.jsx(d.p,{children:"Set value via an input box."}),`
`,e.jsxs(d.p,{children:["Enable the input box by setting the ",e.jsx(d.code,{children:"show-input"})," property to display it on the right side."]}),`
`,e.jsx(s,{withToolbar:!0,of:o}),`
`,e.jsx(d.h2,{id:"sizes",children:"Sizes"}),`
`,e.jsx(s,{withToolbar:!0,of:x}),`
`,e.jsx(d.h2,{id:"variants",children:"Variants"}),`
`,e.jsx(s,{withToolbar:!0,of:j}),`
`,e.jsx(d.h2,{id:"placement",children:"Placement"}),`
`,e.jsx(d.p,{children:"You can customize the tooltip placement."}),`
`,e.jsx(s,{withToolbar:!0,of:a}),`
`,e.jsx(d.h2,{id:"range-selection",children:"Range Selection"}),`
`,e.jsxs(d.p,{children:["Support for selecting a range of values is available. When you set the ",e.jsx(d.code,{children:"range"}),` property, it activates range mode. In this mode, the binding value
becomes an array consisting of two boundary values.`]}),`
`,e.jsx(s,{withToolbar:!0,of:u}),`
`,e.jsx(d.h2,{id:"vertical-mode",children:"Vertical Mode"}),`
`,e.jsxs(d.p,{children:["When you set the ",e.jsx(d.code,{children:"vertical"})," property to ",e.jsx(d.code,{children:"true"}),", it enables vertical mode. In this mode, you need to specify the ",e.jsx(d.code,{children:"height"})," property."]}),`
`,e.jsx(s,{withToolbar:!0,of:p}),`
`,e.jsx(d.h2,{id:"show-marks",children:"Show Marks"}),`
`,e.jsxs(d.p,{children:["By setting the ",e.jsx(d.code,{children:"marks"})," property, you can display marks on the slider."]}),`
`,e.jsx(s,{withToolbar:!0,of:m}),`
`,e.jsx(d.hr,{}),`
`,e.jsx(d.h2,{id:"slider-api",children:"Slider API"}),`
`,e.jsxs("div",{style:{marginTop:"30px"},children:[e.jsx(d.h3,{id:"attributes",children:"Attributes"}),e.jsxs(d.table,{children:[e.jsx(d.thead,{children:e.jsxs(d.tr,{children:[e.jsx(d.th,{children:"Name"}),e.jsx(d.th,{children:"Description"}),e.jsx(d.th,{children:"Type"}),e.jsx(d.th,{children:"Default"})]})}),e.jsxs(d.tbody,{children:[e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"model-value / v-model"}),e.jsx(d.td,{children:"binding value"}),e.jsxs(d.td,{children:[e.jsx(d.code,{children:"number"})," / ",e.jsx(d.code,{children:"number[]"})]}),e.jsx(d.td,{children:"0"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"min"}),e.jsx(d.td,{children:"minimum value"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"number"})}),e.jsx(d.td,{children:"0"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"max"}),e.jsx(d.td,{children:"maximum value"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"number"})}),e.jsx(d.td,{children:"100"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"disabled"}),e.jsx(d.td,{children:"whether Slider is disabled"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"false"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"step"}),e.jsx(d.td,{children:"step size"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"number"})}),e.jsx(d.td,{children:"1"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"show-input"}),e.jsxs(d.td,{children:["whether to display an input box, works when ",e.jsx(d.code,{children:"range"})," is false"]}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"false"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"show-input-controls"}),e.jsxs(d.td,{children:["whether to display control buttons when ",e.jsx(d.code,{children:"show-input"})," is true"]}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"true"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"size"}),e.jsx(d.td,{children:"size of the slider wrapper, will not work in vertical mode"}),e.jsxs(d.td,{children:[e.jsx(d.code,{children:"large"})," | ",e.jsx(d.code,{children:"default"})," | ",e.jsx(d.code,{children:"small"})]}),e.jsx(d.td,{children:"default"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"input-size"}),e.jsxs(d.td,{children:["size of the input box, when set ",e.jsx(d.code,{children:"size"}),", the default is the value of ",e.jsx(d.code,{children:"size"})]}),e.jsxs(d.td,{children:[e.jsx(d.code,{children:"large"})," | ",e.jsx(d.code,{children:"default"})," | ",e.jsx(d.code,{children:"small"})]}),e.jsx(d.td,{children:"default"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"show-stops"}),e.jsx(d.td,{children:"whether to display breakpoints"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"false"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"show-tooltip"}),e.jsx(d.td,{children:"whether to display tooltip value"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"true"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"format-tooltip"}),e.jsx(d.td,{children:"format to display tooltip value"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"(value: number) => number | string"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"range"}),e.jsx(d.td,{children:"whether to select a range"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"false"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"vertical"}),e.jsx(d.td,{children:"vertical mode"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"false"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"height"}),e.jsx(d.td,{children:"slider height, required in vertical mode"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"string"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"label"}),e.jsx(d.td,{children:"label for screen reader"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"string"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"range-start-label"}),e.jsxs(d.td,{children:["when ",e.jsx(d.code,{children:"range"})," is true, screen reader label for the start of the range"]}),e.jsx(d.td,{children:e.jsx(d.code,{children:"string"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"range-end-label"}),e.jsxs(d.td,{children:["when ",e.jsx(d.code,{children:"range"})," is true, screen reader label for the end of the range"]}),e.jsx(d.td,{children:e.jsx(d.code,{children:"string"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"format-value-text"}),e.jsxs(d.td,{children:["format to display the ",e.jsx(d.code,{children:"aria-valuenow"})," attribute for screen readers"]}),e.jsxs(d.td,{children:["^[Function]",e.jsx(d.code,{children:"(value: number) => string"})]}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"debounce"}),e.jsxs(d.td,{children:["debounce delay when typing, in milliseconds, works when ",e.jsx(d.code,{children:"show-input"})," is true"]}),e.jsx(d.td,{children:e.jsx(d.code,{children:"number"})}),e.jsx(d.td,{children:"300"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"tooltip-class"}),e.jsx(d.td,{children:"custom class name for the tooltip"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"string"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"placement"}),e.jsx(d.td,{children:"position of Tooltip"}),e.jsxs(d.td,{children:[e.jsx(d.code,{children:"top"})," | ",e.jsx(d.code,{children:"top-start"})," | ",e.jsx(d.code,{children:"top-end"})," | ",e.jsx(d.code,{children:"bottom"})," | ",e.jsx(d.code,{children:"bottom-start"})," | ",e.jsx(d.code,{children:"bottom-end"})," | ",e.jsx(d.code,{children:"left"})," | ",e.jsx(d.code,{children:"left-start"})," | ",e.jsx(d.code,{children:"left-end"})," | ",e.jsx(d.code,{children:"right"})," | ",e.jsx(d.code,{children:"right-start"})," | ",e.jsx(d.code,{children:"right-end"})]}),e.jsx(d.td,{children:"top"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"marks"}),e.jsxs(d.td,{children:["marks, type of key must be ",e.jsx(d.code,{children:"number"})," and must in closed interval ",e.jsx(d.code,{children:"[min, max]"}),", each mark can custom style"]}),e.jsx(d.td,{children:e.jsx(d.code,{children:"SliderMarks"})}),e.jsx(d.td,{children:"—"})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"validate-event"}),e.jsx(d.td,{children:"whether to trigger form validation"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"boolean"})}),e.jsx(d.td,{children:"true"})]})]})]}),e.jsx(d.h3,{id:"events",children:"Events"}),e.jsxs(d.table,{children:[e.jsx(d.thead,{children:e.jsxs(d.tr,{children:[e.jsx(d.th,{children:"Name"}),e.jsx(d.th,{children:"Description"}),e.jsx(d.th,{children:"Type"})]})}),e.jsxs(d.tbody,{children:[e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"change"}),e.jsx(d.td,{children:"triggers when the value changes (if the mouse is being dragged, this event only fires when the mouse is released)"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"(value: Arrayable<number>) => boolean"})})]}),e.jsxs(d.tr,{children:[e.jsx(d.td,{children:"input"}),e.jsx(d.td,{children:"triggers when the data changes (It'll be emitted in real time during sliding)"}),e.jsx(d.td,{children:e.jsx(d.code,{children:"(value: Arrayable<number>) => boolean"})})]})]})]})]})]})}function V(r={}){const{wrapper:d}={...i(),...r.components};return d?e.jsx(d,{...r,children:e.jsx(t,{...r})}):t(r)}export{V as default};
