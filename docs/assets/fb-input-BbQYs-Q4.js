import{j as e}from"./jsx-runtime-Cwi7KSeA.js";import{u as r}from"./index-BtdslvUy.js";import{M as i,C as n}from"./index-BwNQZ7yn.js";import{I as c,B as l,D as h,C as o,F as x,P as j,W as a,T as u,A as p,M as m,S as f,L as b}from"./fb-input.stories-CRrngwSo.js";import"./iframe-C6g2oLdd.js";import"../sb-preview/runtime.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DXimoRZY.js";import"./index-Dv1YWgiV.js";import"./index-DrFu-skq.js";import"./vue.esm-bundler-DEpQrfwO.js";import"./web-ui-components.es-nLJZCm2K.js";import"./index-Dg9quNvz.js";function d(s){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...r(),...s.components};return e.jsxs(e.Fragment,{children:[e.jsx(i,{of:c}),`
`,e.jsx(t.h1,{id:"input",children:"Input"}),`
`,e.jsx(t.p,{children:"Enter data using either mouse or keyboard inputs."}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"WARNING"}),`
The input component is controlled, meaning it `,e.jsx(t.strong,{children:"always displays the Vue binding value"}),". Typically, you should handle the ",e.jsx(t.code,{children:"input"}),` event, and its handler
should update the component's binding value or use `,e.jsx(t.code,{children:"v-model"}),". Using ",e.jsx(t.code,{children:"v-model"})," modifiers is not supported."]}),`
`]}),`
`,e.jsx(t.h2,{id:"basic-usage",children:"Basic usage"}),`
`,e.jsx(n,{withToolbar:!0,of:l}),`
`,e.jsx(t.h2,{id:"disabled",children:"Disabled"}),`
`,e.jsxs(t.p,{children:["To disable the Input, simply set the ",e.jsx(t.code,{children:"disabled"})," property to ",e.jsx(t.code,{children:"true"}),". This will prevent users from interacting with the input field."]}),`
`,e.jsx(n,{withToolbar:!0,of:h}),`
`,e.jsx(t.h2,{id:"clearable",children:"Clearable"}),`
`,e.jsxs(t.p,{children:["You can make the Input clearable by setting the ",e.jsx(t.code,{children:"clearable"})," property to ",e.jsx(t.code,{children:"true"}),`. This adds a clear icon to the input field, allowing users to easily
clear the input value with a click.`]}),`
`,e.jsx(n,{withToolbar:!0,of:o}),`
`,e.jsx(t.h2,{id:"formatter",children:"Formatter"}),`
`,e.jsxs(t.p,{children:["You can customize the display value of the Input component using the ",e.jsx(t.code,{children:"formatter"})," property. Additionally, you can define a ",e.jsx(t.code,{children:"parser"}),` function to parse
the user input value into the desired format. This combination allows you to control both the displayed value and the parsed value of the Input component.`]}),`
`,e.jsx(n,{withToolbar:!0,of:x}),`
`,e.jsx(t.h2,{id:"password-box",children:"Password Box"}),`
`,e.jsxs(t.p,{children:["You can create a toggle-able password Input by using the ",e.jsx(t.code,{children:"show-password"})," property. When this property is set to ",e.jsx(t.code,{children:"true"}),`, the Input will display the password
in plain text, allowing users to view the entered text.`]}),`
`,e.jsx(n,{withToolbar:!0,of:j}),`
`,e.jsx(t.h2,{id:"input-with-icon",children:"Input With Icon"}),`
`,e.jsxs(t.p,{children:["To indicate the input type with an icon, you can utilize the ",e.jsx(t.code,{children:"prefix-icon"})," and ",e.jsx(t.code,{children:"suffix-icon"})," properties. Additionally, you can use the ",e.jsx(t.code,{children:"prefix"})," and ",e.jsx(t.code,{children:"suffix"}),`
named slots to achieve the same effect.`]}),`
`,e.jsx(n,{withToolbar:!0,of:a}),`
`,e.jsx(t.h2,{id:"textarea",children:"Textarea"}),`
`,e.jsxs(t.p,{children:["To enable users to input multiple lines of text, you can set the ",e.jsx(t.code,{children:"type"}),' attribute to "textarea" and control the height using the ',e.jsx(t.code,{children:"rows"}),` property. This makes
the input resizable for entering larger amounts of text.`]}),`
`,e.jsx(n,{withToolbar:!0,of:u}),`
`,e.jsx(t.h2,{id:"autosize-textarea",children:"Autosize Textarea"}),`
`,e.jsxs(t.p,{children:["When using a textarea type of Input, you can set the ",e.jsx(t.code,{children:"autosize"}),` property to automatically adjust the height based on the content. You can provide an options
object to `,e.jsx(t.code,{children:"autosize"})," to specify the minimum and maximum number of lines the textarea can automatically adjust to."]}),`
`,e.jsx(n,{withToolbar:!0,of:p}),`
`,e.jsx(t.h2,{id:"mixed-input",children:"Mixed Input"}),`
`,e.jsx(t.p,{children:"You can use slots to distribute elements that you want to prepend or append to the Input component."}),`
`,e.jsx(n,{withToolbar:!0,of:m}),`
`,e.jsx(t.h2,{id:"sizes",children:"Sizes"}),`
`,e.jsxs(t.p,{children:["You can use the ",e.jsx(t.code,{children:"size"})," property to adjust the size of the Input component. It supports three options: ",e.jsx(t.code,{children:"default"}),", ",e.jsx(t.code,{children:"large"}),", and ",e.jsx(t.code,{children:"small"}),"."]}),`
`,e.jsx(n,{withToolbar:!0,of:f}),`
`,e.jsx(t.h2,{id:"limit-length",children:"Limit Length"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"maxlength"})," and ",e.jsx(t.code,{children:"minlength"})," properties of the input allow you to set limits on the number of characters a user can input. When ",e.jsx(t.code,{children:"maxlength"}),` is set
for a text or textarea type of Input, it restricts the length of the input value. Additionally, you can display the word count by setting the `,e.jsx(t.code,{children:"show-word-limit"}),`
property to true. The "number of characters" is measured using JavaScript string length.`]}),`
`,e.jsx(n,{withToolbar:!0,of:b}),`
`,e.jsx(t.hr,{}),`
`,e.jsx(t.h2,{id:"input-api",children:"Input API"}),`
`,e.jsxs("div",{style:{marginTop:"30px"},children:[e.jsx(t.h3,{id:"attributes",children:"Attributes"}),e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Name"}),e.jsx(t.th,{children:"Description"}),e.jsx(t.th,{children:"Type"}),e.jsx(t.th,{children:"Default"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"type"}),e.jsx(t.td,{children:"type of input"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"text"})," | ",e.jsx(t.code,{children:"textarea"})," | ",e.jsx(t.code,{children:"password"})," | ",e.jsx(t.code,{children:"button"})," | ",e.jsx(t.code,{children:"checkbox"})," | ",e.jsx(t.code,{children:"file"})," | ",e.jsx(t.code,{children:"number"})," | ",e.jsx(t.code,{children:"radio"})," ... ",e.jsx(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types",rel:"nofollow",children:"native input types"})]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"text"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"model-value / v-model"}),e.jsx(t.td,{children:"binding value"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"number"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"maxlength"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"maxlength"})," in native input"]}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"number"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"minlength"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"minlength"})," in native input"]}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"number"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"show-word-limit"}),e.jsxs(t.td,{children:["whether show word count, only works when ",e.jsx(t.code,{children:"type"})," is ",e.jsx(t.code,{children:"text"})," or ",e.jsx(t.code,{children:"textarea"})]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"placeholder"}),e.jsx(t.td,{children:"placeholder of Input"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"clearable"}),e.jsxs(t.td,{children:["whether to show clear button, only works when ",e.jsx(t.code,{children:"type"})," is not ",e.jsx(t.code,{children:"textarea"})]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"formatter"}),e.jsxs(t.td,{children:["specifies the format of the value presented input. (only works when ",e.jsx(t.code,{children:"type"})," is ",e.jsx(t.code,{children:"text"}),")"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"(value: string | number) => string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"parser"}),e.jsxs(t.td,{children:["specifies the value extracted from formatter input. (only works when ",e.jsx(t.code,{children:"type"})," is ",e.jsx(t.code,{children:"text"}),")"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"(value: string) => string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"show-password"}),e.jsx(t.td,{children:"whether to show toggleable password input"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"disabled"}),e.jsx(t.td,{children:"whether Input is disabled"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"size"}),e.jsxs(t.td,{children:["size of Input, works when ",e.jsx(t.code,{children:"type"})," is not ",e.jsx(t.code,{children:"textarea"})]}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"large"})," | ",e.jsx(t.code,{children:"default"})," | ",e.jsx(t.code,{children:"small"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"prefix-icon"}),e.jsx(t.td,{children:"prefix icon component"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"Component"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"suffix-icon"}),e.jsx(t.td,{children:"suffix icon component"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"Component"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"rows"}),e.jsxs(t.td,{children:["number of rows of textarea, only works when ",e.jsx(t.code,{children:"type"})," is ",e.jsx(t.code,{children:"textarea"})]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"number"})}),e.jsx(t.td,{children:"2"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"autosize"}),e.jsxs(t.td,{children:["whether textarea has an adaptive height, only works when ",e.jsx(t.code,{children:"type"})," is ",e.jsx(t.code,{children:"textarea"}),". Can accept an object, e.g. ",e.jsx(t.code,{children:"{ minRows: 2, maxRows: 6 }"})]}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"boolean"})," | ",e.jsx(t.code,{children:"{ minRows?: number, maxRows?: number }"})]}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"autocomplete"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"autocomplete"})," in native input"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"name"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"name"})," in native input"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"readonly"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"readonly"})," in native input"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"max"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"max"})," in native input"]}),e.jsx(t.td,{children:"—"}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"min"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"min"})," in native input"]}),e.jsx(t.td,{children:"—"}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"step"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"step"})," in native input"]}),e.jsx(t.td,{children:"—"}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"resize"}),e.jsx(t.td,{children:"control the resizability"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"none"})," | ",e.jsx(t.code,{children:"both"})," | ",e.jsx(t.code,{children:"horizontal"})," | ",e.jsx(t.code,{children:"vertical"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"autofocus"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"autofocus"})," in native input"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"false"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"form"}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"form"})," in native input"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsxs(t.td,{children:["label ",e.jsx(t.code,{children:"a11y"})]}),e.jsxs(t.td,{children:["same as ",e.jsx(t.code,{children:"aria-label"})," in native input"]}),e.jsx(t.td,{children:e.jsx(t.code,{children:"string"})}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"tabindex"}),e.jsx(t.td,{children:"input tabindex"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"number"})]}),e.jsx(t.td,{children:"—"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"validate-event"}),e.jsx(t.td,{children:"whether to trigger form validation"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"boolean"})}),e.jsx(t.td,{children:"true"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"input-style"}),e.jsx(t.td,{children:"the style of the input element or textarea element"}),e.jsxs(t.td,{children:[e.jsx(t.code,{children:"string"})," | ",e.jsx(t.code,{children:"CSSProperties"})," | ",e.jsx(t.code,{children:"CSSProperties[]"})," | ",e.jsx(t.code,{children:"string[]"})]}),e.jsx(t.td,{children:"—"})]})]})]}),e.jsx(t.h3,{id:"events",children:"Events"}),e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Name"}),e.jsx(t.th,{children:"Description"}),e.jsx(t.th,{children:"Type"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"blur"}),e.jsx(t.td,{children:"triggers when Input blurs"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"(event: FocusEvent) => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"focus"}),e.jsx(t.td,{children:"triggers when Input focuses"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"(event: FocusEvent) => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"change"}),e.jsx(t.td,{children:"triggers when the input box loses focus or the user presses Enter, only if the modelValue has changed"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"(value: string | number) => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"input"}),e.jsx(t.td,{children:"triggers when the Input value change"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"(value: string | number) => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"clear"}),e.jsx(t.td,{children:"triggers when the Input is cleared by clicking the clear button"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})})]})]})]}),e.jsx(t.h3,{id:"slots",children:"Slots"}),e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Name"}),e.jsx(t.th,{children:"Description"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"prefix"}),e.jsxs(t.td,{children:["content as Input prefix, only works when ",e.jsx(t.code,{children:"type"})," is not 'textarea'"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"suffix"}),e.jsxs(t.td,{children:["content as Input suffix, only works when ",e.jsx(t.code,{children:"type"})," is not 'textarea'"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"prepend"}),e.jsxs(t.td,{children:["content to prepend before Input, only works when ",e.jsx(t.code,{children:"type"})," is not 'textarea'"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"append"}),e.jsxs(t.td,{children:["content to append after Input, only works when ",e.jsx(t.code,{children:"type"})," is not 'textarea'"]})]})]})]}),e.jsx(t.h3,{id:"exposes",children:"Exposes"}),e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{children:"Name"}),e.jsx(t.th,{children:"Description"}),e.jsx(t.th,{children:"Type"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"blur"}),e.jsx(t.td,{children:"blur the input element"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"clear"}),e.jsx(t.td,{children:"clear input value"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"focus"}),e.jsx(t.td,{children:"focus the input element"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"input"}),e.jsx(t.td,{children:"HTML input element"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"Ref<HTMLInputElement>"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"ref"}),e.jsx(t.td,{children:"HTML element, input or textarea"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"Ref<HTMLInputElement | HTMLTextAreaElement>"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"resizeTextarea"}),e.jsx(t.td,{children:"resize textarea"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"select"}),e.jsx(t.td,{children:"select the text in input element"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"() => void"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"textarea"}),e.jsx(t.td,{children:"HTML textarea element"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"Ref<HTMLTextAreaElement>"})})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"textareaStyle"}),e.jsx(t.td,{children:"style of textarea"}),e.jsx(t.td,{children:e.jsx(t.code,{children:"Ref<StyleValue>"})})]})]})]})]})]})}function A(s={}){const{wrapper:t}={...r(),...s.components};return t?e.jsx(t,{...s,children:e.jsx(d,{...s})}):d(s)}export{A as default};
